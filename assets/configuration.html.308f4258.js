import{r as s,o as e,c as a,a as n,w as l,F as c,e as i,b as o,d as t}from"./app.586fb7f7.js";const d={},r=i('<h1 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h1><h2 id="webpack" tabindex="-1"><a class="header-anchor" href="#webpack" aria-hidden="true">#</a> Webpack</h2><p>Theme Lab uses vanilla webpack configurations, you can easily adjust them however you like. All webpack configs reside inside the <code>.config/webpack/</code> directory. <code>src/main.js</code> is webpack&#39;s main entry point.</p><h2 id="css-preprocessors" tabindex="-1"><a class="header-anchor" href="#css-preprocessors" aria-hidden="true">#</a> CSS preprocessors</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>For the most cohesive development experience, it&#39;s recommended that you use PostCSS exclusively when working with Tailwind CSS.</p></div><p>By default, only PostCSS is installed. If you want to use a preprocessor it&#39;s recommended to use <code>SASS/SCSS</code> since it&#39;s the most compatible with a variety of CSS frameworks.</p><h3 id="sass-scss" tabindex="-1"><a class="header-anchor" href="#sass-scss" aria-hidden="true">#</a> SASS/SCSS</h3><ol><li>Install <code>SASS</code> packages.</li></ol>',8),p=o("div",{class:"language-bash ext-sh line-numbers-mode"},[o("pre",{class:"language-bash"},[o("code",null,[o("span",{class:"token function"},"npm"),t(),o("span",{class:"token function"},"install"),t(" sass sass-loader --save-dev\n")])]),o("div",{class:"line-numbers"},[o("span",{class:"line-number"},"1"),o("br")])],-1),u=o("div",{class:"language-bash ext-sh line-numbers-mode"},[o("pre",{class:"language-bash"},[o("code",null,[t(),o("span",{class:"token function"},"yarn"),t(),o("span",{class:"token function"},"add"),t(" sass sass-loader --dev\n")])]),o("div",{class:"line-numbers"},[o("span",{class:"line-number"},"1"),o("br")])],-1),m=i('<ol start="2"><li><p>Rename <code>src/css/main.css</code> to <code>src/css/main.scss</code>.</p></li><li><p>Change the <code>CSS</code> import in <code>src/main.js</code>.</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&#39;./css/main.scss&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="less" tabindex="-1"><a class="header-anchor" href="#less" aria-hidden="true">#</a> LESS</h3><ol><li>Install <code>LESS</code> packages.</li></ol>',4),h=o("div",{class:"language-bash ext-sh line-numbers-mode"},[o("pre",{class:"language-bash"},[o("code",null,[o("span",{class:"token function"},"npm"),t(),o("span",{class:"token function"},"install"),t(),o("span",{class:"token function"},"less"),t(" less-loader --save-dev\n")])]),o("div",{class:"line-numbers"},[o("span",{class:"line-number"},"1"),o("br")])],-1),b=o("div",{class:"language-bash ext-sh line-numbers-mode"},[o("pre",{class:"language-bash"},[o("code",null,[t(),o("span",{class:"token function"},"yarn"),t(),o("span",{class:"token function"},"add"),t(),o("span",{class:"token function"},"less"),t(" less-loader --dev\n")])]),o("div",{class:"line-numbers"},[o("span",{class:"line-number"},"1"),o("br")])],-1),g=i('<ol start="2"><li><p>Rename <code>src/css/main.css</code> to <code>src/css/main.less</code>.</p></li><li><p>Change the <code>CSS</code> import in <code>src/main.js</code>.</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&#39;./css/main.less&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="stylus" tabindex="-1"><a class="header-anchor" href="#stylus" aria-hidden="true">#</a> Stylus</h3><ol><li>Install <code>STYLUS</code> packages.</li></ol>',4),v=o("div",{class:"language-bash ext-sh line-numbers-mode"},[o("pre",{class:"language-bash"},[o("code",null,[o("span",{class:"token function"},"npm"),t(),o("span",{class:"token function"},"install"),t(" stylus stylus-loader --save-dev\n")])]),o("div",{class:"line-numbers"},[o("span",{class:"line-number"},"1"),o("br")])],-1),f=o("div",{class:"language-bash ext-sh line-numbers-mode"},[o("pre",{class:"language-bash"},[o("code",null,[t(),o("span",{class:"token function"},"yarn"),t(),o("span",{class:"token function"},"add"),t(" stylus stylus-loader --dev\n")])]),o("div",{class:"line-numbers"},[o("span",{class:"line-number"},"1"),o("br")])],-1),S=i('<ol start="2"><li><p>Rename <code>src/css/main.css</code> to <code>src/css/main.styl</code>.</p></li><li><p>Change the <code>CSS</code> import in <code>src/main.js</code>.</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&#39;./css/main.styl&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',2);d.render=function(i,o){const t=s("CodeGroupItem"),d=s("CodeGroup");return e(),a(c,null,[r,n(d,null,{default:l((()=>[n(t,{title:"NPM",active:""},{default:l((()=>[p])),_:1}),n(t,{title:"YARN"},{default:l((()=>[u])),_:1})])),_:1}),m,n(d,null,{default:l((()=>[n(t,{title:"NPM",active:""},{default:l((()=>[h])),_:1}),n(t,{title:"YARN"},{default:l((()=>[b])),_:1})])),_:1}),g,n(d,null,{default:l((()=>[n(t,{title:"NPM",active:""},{default:l((()=>[v])),_:1}),n(t,{title:"YARN"},{default:l((()=>[f])),_:1})])),_:1}),S],64)};export{d as default};
